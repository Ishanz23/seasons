{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","season","lat","month","getSeason","Date","getMonth","className","defaultProps","Spinner","message","App","useState","errorMsg","state","setState","useEffect","navigator","geolocation","getCurrentPosition","pos","coords","latitude","err","style","width","height","display","alignItems","justifyContent","backgroundColor","color","ReactDOM","render","document","getElementById"],"mappings":"qJAGMA,G,KAAe,CACnBC,OAAQ,CACNC,KAAM,2BACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,8BACNC,SAAU,eAYRE,EAAgB,SAAC,GAAa,IAC5BC,EATU,SAACC,EAAKC,GACtB,OAAIA,EAAQ,GAAKA,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,SAKfE,CADkB,EAAVF,KACO,IAAIG,MAAOC,YADR,EAENX,EAAaM,GAAhCJ,EAFyB,EAEzBA,KAAMC,EAFmB,EAEnBA,SACd,OACE,yBAAKS,UAAS,yBAAoBN,IAChC,uBAAGM,UAAS,kBAAaT,EAAb,eACZ,yBAAKS,UAAU,QACb,4BAAKV,IAEP,uBAAGU,UAAS,kBAAaT,EAAb,oBAKlBE,EAAcQ,aAAe,CAC3BN,IAAK,MAGQF,QCtCTS,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,OACE,yBAAKH,UAAU,oBAAf,IACG,yBAAKA,UAAU,kBAAkBG,KAKxCD,EAAQD,aAAe,CACrBE,QAAS,cAGID,QCTTE,EAAM,WAAO,IAAD,EACUC,mBAAS,CAAEV,IAAK,KAAMW,SAAU,KAD1C,mBACTC,EADS,KACFC,EADE,KAGhBC,qBAAU,WAMR,OALAC,UAAUC,YAAYC,oBACpB,SAAAC,GAAG,OAAIL,EAAS,CAAEb,IAAKkB,EAAIC,OAAOC,cAClC,SAAAC,GAAG,OAAIR,EAAS,CAAEF,SAAUU,EAAIb,aAG3B,eACN,IA6BH,OAAO,yBAAKc,MAAO,CAAEC,MAAO,OAAQC,OAAQ,UA1BtCZ,EAAMZ,IAEN,6BACE,kBAAC,EAAD,CAAeA,IAAKY,EAAMZ,OAGrBY,EAAMD,SAEb,wBACEW,MAAO,CACLC,MAAO,OACPC,OAAQ,QACRC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,gBAAiB,UACjBC,MAAO,SAETxB,UAAU,SACTO,EAAMD,UAIN,kBAAC,EAAD,CAASH,QAAQ,gCAM5BsB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.12f50e17.chunk.js","sourcesContent":["import './SeasonDisplay.css'\r\nimport React from 'react'\r\n\r\nconst seasonConfig = {\r\n  summer: {\r\n    text: \"Let's head to the beach!\",\r\n    iconName: 'sun'\r\n  },\r\n  winter: {\r\n    text: 'Get inside the blanket now!',\r\n    iconName: 'snowflake'\r\n  }\r\n}\r\n\r\nconst getSeason = (lat, month) => {\r\n  if (month < 2 || month > 9) {\r\n    return lat > 0 ? 'winter' : 'summer'\r\n  } else {\r\n    return lat > 0 ? 'summer' : 'winter'\r\n  }\r\n}\r\n\r\nconst SeasonDisplay = ({ lat }) => {\r\n  const season = getSeason(lat, new Date().getMonth())\r\n  const { text, iconName } = seasonConfig[season]\r\n  return (\r\n    <div className={`season-display ${season}`}>\r\n      <i className={`massive ${iconName} icon top`}></i>\r\n      <div className='text'>\r\n        <h1>{text}</h1>\r\n      </div>\r\n      <i className={`massive ${iconName} icon bottom`}></i>\r\n    </div>\r\n  )\r\n}\r\n\r\nSeasonDisplay.defaultProps = {\r\n  lat: null\r\n}\r\n\r\nexport default SeasonDisplay\r\n","import React from 'react'\r\n\r\nconst Spinner = ({ message }) => {\r\n  return (\r\n    <div className='ui active dimmer'>\r\n      ><div className='ui text loader'>{message}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nSpinner.defaultProps = {\r\n  message: 'Loading...'\r\n}\r\n\r\nexport default Spinner\r\n","import React, { useState, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport SeasonDisplay from './SeasonDisplay'\r\nimport Spinner from './Spinner'\r\n\r\nconst App = () => {\r\n  const [state, setState] = useState({ lat: null, errorMsg: '' })\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      pos => setState({ lat: pos.coords.latitude }),\r\n      err => setState({ errorMsg: err.message })\r\n    )\r\n\r\n    return () => {}\r\n  }, [])\r\n\r\n  const renderHelper = () => {\r\n    if (state.lat) {\r\n      return (\r\n        <div>\r\n          <SeasonDisplay lat={state.lat}></SeasonDisplay>\r\n        </div>\r\n      )\r\n    } else if (state.errorMsg) {\r\n      return (\r\n        <h1\r\n          style={{\r\n            width: '100%',\r\n            height: '100vh',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: '#252525',\r\n            color: 'white'\r\n          }}\r\n          className='error'>\r\n          {state.errorMsg}\r\n        </h1>\r\n      )\r\n    }\r\n    return <Spinner message='Fetching your location...'></Spinner>\r\n  }\r\n\r\n  return <div style={{ width: '100%', height: '100vh' }}>{renderHelper()}</div>\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}